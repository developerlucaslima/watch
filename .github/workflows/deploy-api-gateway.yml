name: Deploy API Gateway

on:
  push:
    branches:
      - main
    paths:
      - 'apps/api-gateway/**'
      - '.github/workflows/deploy-api-gateway.yml'

jobs:
  lint:
    name: 🧹 Lint & Typecheck
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: 📦 Install root dependencies
        run: npm ci

      - name: 🧹 Run Lint
        run: npm run lint:api

      - name: 🔎 Typecheck
        run: npm run --workspace=apps/api-gateway typecheck

  setup:
    name: ⚙️ Ensure SQS Queue Exists
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: 📦 Install root dependencies
        run: npm ci

      - name: 📦 Install gateway dependencies
        working-directory: apps/api-gateway
        run: npm install

      - name: ⚙️ Run SQS Setup Script
        run: npm run setup:sqs
        working-directory: apps/api-gateway
        env:
          NODE_ENV: development
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy:
    name: 🚀 Deploy API Gateway
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: 📦 Install root dependencies
        run: npm ci

      - name: 📦 Install gateway dependencies
        working-directory: apps/api-gateway
        run: npm install

      - name: 🛠️ Generate Prisma Client
        working-directory: apps/api-gateway
        run: npx prisma generate --schema=../../prisma/schema.prisma
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: 📦 Package Lambda
        working-directory: apps/api-gateway
        run: npx serverless package --stage=dev
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: ✅ Confirm Prisma Engine in package
        run: |
          unzip -l apps/api-gateway/.serverless/api-gateway-dev.zip | grep libquery_engine-linux-arm64-openssl-3.0.x.so.node || {
            echo "❌ Prisma engine not found in deployment package"
            exit 1
          }

      - name: 🚀 Deploy Lambda Api
        working-directory: apps/api-gateway
        run: npx serverless deploy --stage=dev
        env:
          NODE_ENV: production
          ORIGIN_URL: ${{ secrets.ORIGIN_URL }}
          SQS_QUEUE_URL: ${{ secrets.SQS_QUEUE_URL }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
