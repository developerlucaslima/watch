name: Deploy API Gateway

on:
  push:
    branches: [main]
    paths:
      - 'apps/api-gateway/**'
      - 'packages/prisma/**'
      - '.github/workflows/deploy-api-gateway.yml'

jobs:
  install:
    runs-on: ubuntu-latest
    name: ðŸ“¦ Install & Generate Prisma Client
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client for Lambda
        run: npx prisma generate --schema=packages/prisma/schema.prisma
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  lint:
    runs-on: ubuntu-latest
    needs: install
    name: ðŸ§¹ Lint
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - run: npm run lint:api

  typecheck:
    runs-on: ubuntu-latest
    needs: install
    name: ðŸ”Ž Typecheck
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - run: npm run typecheck
        working-directory: apps/api-gateway

  deploy:
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    name: ðŸš€ Deploy API Gateway
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client for Lambda
        run: npx prisma generate --schema=packages/prisma/schema.prisma
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Deploy to AWS via Serverless
        working-directory: apps/api-gateway
        run: npx serverless deploy --stage=dev
        env:
          NODE_ENV: production
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ORIGIN_URL: ${{ secrets.ORIGIN_URL }}
          SQS_QUEUE_URL: ${{ secrets.SQS_QUEUE_URL }}
