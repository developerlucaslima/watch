name: Deploy API Gateway

on:
  push:
    branches:
      - main
    paths:
      - 'apps/api-gateway/**'
      - '.github/workflows/deploy-api-gateway.yml'

jobs:
  deploy:
    name: Deploy API Gateway
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v3

      - name: üì¶ Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: üì• Install dependencies
        run: npm ci

      - name: üßπ Run Lint
        run: npm run lint:api

      - name: üõ†Ô∏è Build and Typecheck
        working-directory: apps/api-gateway
        run: npm run build && npm run typecheck

      - name: ‚öôÔ∏è Ensure SQS Queue Exists
        working-directory: apps/api-gateway
        run: npm run setup:sqs
        env:
          NODE_ENV: development
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: üöÄ Deploy to Serverless
        working-directory: apps/api-gateway
        run: npx serverless deploy --stage=dev
        env:
          NODE_ENV: production
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          BASE_URL: ${{ secrets.BASE_URL }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
