name: Deploy Video View Worker

on:
  push:
    branches: [main]
    paths:
      - 'apps/video-view-worker/**'
      - 'packages/prisma/**'
      - '.github/workflows/deploy-video-view-worker.yml'

jobs:
  install:
    runs-on: ubuntu-latest
    name: üì¶ Install & Generate Prisma Client
    steps:
      - uses: actions/checkout@v3

      - name: Cache node_modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install all dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Generate Prisma Client for Lambda
        run: npx prisma generate --schema=packages/prisma/schema.prisma
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  lint:
    runs-on: ubuntu-latest
    needs: install
    name: üßπ Lint
    steps:
      - uses: actions/checkout@v3
      - run: npm run lint:worker

  typecheck:
    runs-on: ubuntu-latest
    needs: install
    name: üîé Typecheck
    steps:
      - uses: actions/checkout@v3
      - run: npm run typecheck
        working-directory: apps/video-view-worker

  build:
    runs-on: ubuntu-latest
    needs: typecheck
    name: üèó Build
    steps:
      - uses: actions/checkout@v3
      - run: npm run build
        working-directory: apps/video-view-worker

  deploy:
    runs-on: ubuntu-latest
    needs: build
    name: üöÄ Deploy Video View Worker
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to AWS via Serverless
        working-directory: apps/video-view-worker
        run: npx serverless deploy --stage=dev
        env:
          NODE_ENV: production
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
