name: Deploy Video View Worker

on:
  push:
    branches:
      - main
    paths:
      - 'apps/video-view-worker/**'
      - '.github/workflows/deploy-video-view-worker.yml'

jobs:
  lint:
    name: 🧹 Lint & Typecheck
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: 📦 Install root dependencies
        run: npm ci

      - name: 🧹 Run Lint
        run: npm run lint:worker

      - name: 🔎 Typecheck
        run: npm run --workspace=apps/video-view-worker typecheck

  deploy:
    name: 🚀 Deploy Video View Worker
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: 📦 Install root dependencies
        run: npm ci

      - name: 📦 Install worker dependencies
        working-directory: apps/video-view-worker
        run: npm install

      - name: 🛠️ Generate Prisma Client
        working-directory: apps/video-view-worker
        run: npx prisma generate --schema=../../prisma/schema.prisma
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: 🛠️ Build Lambda Worker
        working-directory: apps/video-view-worker
        run: npm run build

      - name: 🚀 Deploy Lambda Worker
        working-directory: apps/video-view-worker
        run: npx serverless deploy --stage=dev
        env:
          NODE_ENV: production
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
